package todolist;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;

public class DateDisplay extends javax.swing.JPanel {

    private static String day;
    private static String month;
    private static String year;
    public static Integer TODAY ;

    public DateDisplay() {
        initComponents();
        TODAY = getTodayDate();
    }

    private String getDate() {
        LocalDateTime now = LocalDateTime.now();

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("E dd/MM/yyyy", Locale.ENGLISH);

        String formattedDate = now.format(formatter);

        String[] dateLine = formattedDate.split("[^0-9]");
        int count = 0;
        for (String s : dateLine) {
            if (s.equals("")) {
                continue;
            } else {
                switch (count) {
                    case 0:
                        this.day = s;
                        count++;
                        break;
                    case 1:
                        this.month = s;
                        count++;
                        break;
                    case 2:
                        this.year = s;
                        count = 0;
                        break;
                }
            }
        }
        return formattedDate;
    }

    private Integer getTodayDate() {
        LocalDateTime now = LocalDateTime.now();

        // Create a DateTimeFormatter for the desired format
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMdd", Locale.ENGLISH);

        // Format the current date and time
        String formattedDate = now.format(formatter);

        // Extract day, month, and year if needed
        this.year = formattedDate.substring(0, 4);
        this.month = formattedDate.substring(4, 6);
        this.day = formattedDate.substring(6, 8);

        return Integer.parseInt(formattedDate); // Returns date in the format yyyymmdd
    }

    public static String getDay() {
        return day;
    }

    public static String getMonth() {
        return month;
    }

    public static String getYear() {
        return year;
    }

    public static String toDateLine() {
        return getDay() + "/" + getMonth() + "/" + getYear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateLB = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 74, 173));
        setMinimumSize(new java.awt.Dimension(230, 70));
        setPreferredSize(new java.awt.Dimension(230, 70));

        dateLB.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        dateLB.setForeground(new java.awt.Color(0, 74, 173));
        dateLB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLB.setText(getDate());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dateLB, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(dateLB, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel dateLB;
    // End of variables declaration//GEN-END:variables
}
